#!/bin/bash
set -o pipefail
set -e

###############readme
#this script will take demultiplexed fastq files (from Guppy) do the following alignment with NGMLR and variants calling with Clair

#usage: yeah -q /path/to/folder_with_fastq  -w /path/to/folder_for_output -r /path/to/reference_for_alignment -b /path/to/bed_file_with_full_GBA_coverage -Q threshold_for_QG_filtering_of_called_variants -t target_region(format chrx:nnnnnnnnn-nnnnnnnnn)[default chr1:155234452-155241249]

#before starting you need all dependencies installed and added to PATH (NGMLR, bgzip, tabiz, annovar, whatshap, nanopolish, vcftools, bcftools)

###########setting options
target=chr1:155234452-155241249

while getopts 'q:w:r:b:Q:t:' OPTION
do
    case "$OPTION" in
	q)
	    FQ="$OPTARG"
	    ;;
	w)
	    WD="$OPTARG"
	    ;;
	r)
	    ref="$OPTARG"
	    ;;
	b)
	    bed="$OPTARG"
	    ;;
	t)
	    target="$OPTARG"
	    ;;
	Q)
	    qual="$OPTARG"
	    ;;
	?)
	echo "option missing" >&2
	exit 1
	;;
    esac
done
shift "$(($OPTIND -1))" 

echo preparing files

mkdir $WD/mergedfastq $WD/aligned $WD/sorted_indexed $WD/clair $WD/downsampled_bams $WD/finaloutput $WD/coverage $WD/downsampled_sorted_indexed $WD/QG_filter $WD/phased $WD/phased_unfiltered

for D in $FQ/*
do

    find $D -name *.fastq -exec cat {} \;  > $WD/mergedfastq/${D#"$(dirname "$D")"/}.fastq

done

echo aligning

for f in $WD/mergedfastq/*.fastq
do
    
    ngmlr \
	-t 8 \
	-r $ref \
	-q $f \
	-o $WD/aligned/$(basename $f .fastq).sam \
	-x ont

done

echo sorting and indexing

for f in $WD/aligned/*.sam
do

    samtools sort $f \
	     -o $WD/sorted_indexed/$(basename $f .sam).bam

done

for f in $WD/sorted_indexed/*.bam
do

    samtools index $f

done

echo adjusting coverage

for f in $WD/sorted_indexed/*.bam
do

        var="$(coverageBed -mean -a $bed -b $f | awk '{print $4}')"                                             
	int=${var%.*}

	    if [ $int -gt 550 ]                                                         
                                                                                
    then                                                                        

	var1="$(echo "1/($var/550)" | bc -l)"                                   
        samtools view -s $var1 -b $f -o $WD/downsampled_bams/${f#"$(dirname "$f")"/}
                                                                                
    else                                                                        

	cp $f $WD/downsampled_bams/${f#"$(dirname "$f")"/}                        
                                                                                
    fi                                                                          
                                                                                
done

echo sorting and indexing 2

for f in $WD/downsampled_bams/*.bam
do

    samtools sort $f \
	     -o $WD/downsampled_sorted_indexed/${f#"$(dirname "$f")"/}

done

for f in $WD/downsampled_sorted_indexed/*.bam
do

    samtools index $f

done

echo calling variants

target1=${target%:*}
Sacile=${target#*:}
target2=${Sacile%-*}
target3=${target#*-}

CONDA_BASE=$(conda info --base)
source $CONDA_BASE/etc/profile.d/conda.sh

conda activate clair-env

CLAIR=/home/minionpc/Clair/clair.py                                                                                                                                               
MODEL=/home/minionpc/Clair/ont/model                                                                                                                                              
REFERENCE_FASTA_FILE_PATH=$ref                                                                                                                                 
CONTIG_NAME=chr1

for f in $WD/downsampled_sorted_indexed/*.bam                                                                                                                                                   
do                                                                                                                                                                                

    VARIANT_CALLING_OUTPUT_PATH=$WD/clair/$(basename $f .bam).vcf                                                                                                                              
    BAM_FILE_PATH=$f                                                                                                                                                              
    SAMPLE_NAME=$(basename $f .bam)                                                                                                                                            
    python $CLAIR callVarBam --chkpnt_fn "$MODEL" --ref_fn "$REFERENCE_FASTA_FILE_PATH" --bam_fn "$BAM_FILE_PATH" --ctgName "$target1" --sampleName "$SAMPLE_NAME" --call_fn "$VARIANT_CALLING_OUTPUT_PATH" --minCoverage 20 --threshold 0.2 --delay 2 --ctgStart "$target2" --ctgEnd "$target3" --dcov 1000

done

conda deactivate

echo filtering variants

for f in $WD/clair/*.vcf
do
    
	 bcftools view -i "GQ > $qual" $f -o $WD/QG_filter/$(basename $f .vcf).vcf

done

echo phasing

for f in $WD/QG_filter/*.vcf
do

    sample=$(basename $f .vcf)

    whatshap phase $f $WD/sorted_indexed/$sample.bam \
	     --reference $ref \
	     -o $WD/phased/$sample.vcf \
	     --ignore-read-groups

done

echo phasing non-filtered vcfs

for f in $WD/clair/*.vcf
do

    sample=$(basename $f .vcf)

    whatshap phase $f $WD/sorted_indexed/$sample.bam \
	     --reference $ref \
	     -o $WD/phased_unfiltered/$sample.vcf \
	     --ignore-read-groups

done

echo finalising

for f in  $WD/phased/*.vcf                                                                                      
do                                                                                                        

    bgzip $f                                                                                              
                                                                                                          
done                                                                                                      
                                                                                                          
for f in $WD/phased/*gz                                                                                         
do                                                                                                        

    tabix -p vcf $f                                                                                       
                                                                                                          
done                                                                                                      
                                                                                                          
vcf-merge $WD/phased/*.gz > $WD/finaloutput/final.vcf

for f in $WD/downsampled_sorted_indexed/*.bam
do

    coverageBed \
	-mean \
	-header \
	-a $bed \
	-b $f \
	> $WD/coverage/$(basename $f .bam).vcf

done

more $WD/coverage/* | cat > $WD/finaloutput/coverage.vcf

for f in  $WD/phased_unfiltered/*.vcf                                                                                      
do                                                                                                        

    bgzip $f                                                                                              
                                                                                                          
done                                                                                                      
                                                                                                          
for f in $WD/phased_unfiltered/*gz                                                                                         
do                                                                                                        

    tabix -p vcf $f                                                                                       
                                                                                                          
done                                                                                                      
                                                                                                          
vcf-merge $WD/phased_untiltered/*.gz > $WD/finaloutput/final_unfiltered.vcf

echo oh yeah!
